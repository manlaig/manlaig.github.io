{"version":3,"sources":["../../src/redux/index.js"],"names":["Redux","require","_","fs","mitt","stringify","emitter","reducers","objectToMap","obj","map","Map","Object","keys","forEach","key","set","mapToObject","value","initialState","file","readFileSync","process","cwd","Buffer","isBuffer","JSON","parse","staticQueryComponents","components","nodes","e","store","createStore","combineReducers","applyMiddleware","multi","dispatch","next","action","Array","isArray","filter","Boolean","saveState","state","pickedState","pick","writeStream","createWriteStream","pipe","on","destroy","end","saveStateDebounced","debounce","subscribe","lastAction","getState","emit","type","bootstrapFinished","env","gatsby_executing_command","exports"],"mappings":"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","sourcesContent":["const Redux = require(`redux`)\nconst _ = require(`lodash`)\nconst fs = require(`fs`)\nconst mitt = require(`mitt`)\nconst stringify = require(`json-stream-stringify`)\n\n// Create event emitter for actions\nconst emitter = mitt()\n\n// Reducers\nconst reducers = require(`./reducers`)\n\nconst objectToMap = obj => {\n  let map = new Map()\n  Object.keys(obj).forEach(key => {\n    map.set(key, obj[key])\n  })\n  return map\n}\n\nconst mapToObject = map => {\n  const obj = {}\n  for (let [key, value] of map) {\n    obj[key] = value\n  }\n  return obj\n}\n\n// Read from cache the old node data.\nlet initialState = {}\ntry {\n  const file = fs.readFileSync(`${process.cwd()}/.cache/redux-state.json`)\n  // Apparently the file mocking in node-tracking-test.js\n  // can override the file reading replacing the mocked string with\n  // an already parsed object.\n  if (Buffer.isBuffer(file) || typeof file === `string`) {\n    initialState = JSON.parse(file)\n  }\n  if (initialState.staticQueryComponents) {\n    initialState.staticQueryComponents = objectToMap(\n      initialState.staticQueryComponents\n    )\n  }\n  if (initialState.components) {\n    initialState.components = objectToMap(initialState.components)\n  }\n  if (initialState.nodes) {\n    initialState.nodes = objectToMap(initialState.nodes)\n  }\n} catch (e) {\n  // ignore errors.\n}\n\nconst store = Redux.createStore(\n  Redux.combineReducers({ ...reducers }),\n  initialState,\n  Redux.applyMiddleware(function multi({ dispatch }) {\n    return next => action =>\n      Array.isArray(action)\n        ? action.filter(Boolean).map(dispatch)\n        : next(action)\n  })\n)\n\n// Persist state.\nconst saveState = state => {\n  const pickedState = _.pick(state, [\n    `nodes`,\n    `status`,\n    `componentDataDependencies`,\n    `jsonDataPaths`,\n    `components`,\n    `staticQueryComponents`,\n  ])\n\n  pickedState.staticQueryComponents = mapToObject(\n    pickedState.staticQueryComponents\n  )\n  pickedState.components = mapToObject(pickedState.components)\n  pickedState.nodes = mapToObject(pickedState.nodes)\n\n  const writeStream = fs.createWriteStream(\n    `${process.cwd()}/.cache/redux-state.json`\n  )\n\n  new stringify(pickedState, null, 2, true)\n    .pipe(writeStream)\n    .on(`finish`, () => {\n      writeStream.destroy()\n      writeStream.end()\n    })\n    .on(`error`, () => {\n      writeStream.destroy()\n      writeStream.end()\n    })\n}\nconst saveStateDebounced = _.debounce(saveState, 1000)\n\nstore.subscribe(() => {\n  const lastAction = store.getState().lastAction\n  emitter.emit(lastAction.type, lastAction)\n})\n\n// During development, once bootstrap is finished, persist state on changes.\nlet bootstrapFinished = false\nif (process.env.gatsby_executing_command === `develop`) {\n  emitter.on(`BOOTSTRAP_FINISHED`, () => {\n    bootstrapFinished = true\n    saveState(store.getState())\n  })\n  emitter.on(`*`, () => {\n    if (bootstrapFinished) {\n      saveStateDebounced(store.getState())\n    }\n  })\n}\n\n// During builds, persist state once bootstrap has finished.\nif (process.env.gatsby_executing_command === `build`) {\n  emitter.on(`BOOTSTRAP_FINISHED`, () => {\n    saveState(store.getState())\n  })\n}\n\n/** Event emitter */\nexports.emitter = emitter\n\n/** Redux store */\nexports.store = store\n"],"file":"index.js"}